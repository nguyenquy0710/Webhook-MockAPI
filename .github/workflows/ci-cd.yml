name: Java CI/CD with Maven and Docker

on:
  workflow_dispatch: # Cho phép chạy thủ công
  # push:
  #   branches: ["main"]
  # pull_request:
  #   branches: ["main"]
  release:
    types: [created]

env:
  SERVER: production
  BRANCH: ${{ github.ref_name }}
  REPOSITORY: ${{ github.repository }}
  # VERSION: "1.0.${{ github.run_number }}-${{ github.ref_name == 'main' && 'prod' || 'dev' }}"
  VERSION: ${{ ((github.ref_type == 'branch' && github.ref_name == 'main') || (github.ref_type == 'tag')) && format('1.0.{0}', github.run_number) || format('1.0.{0}-dev', github.run_number) }}

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven (clean package)
        run: ./mvnw clean package -B

      # - name: Build with Maven
      #   run: mvn -B package

      - name: Run tests
        # run: mvn test
        run: ./mvnw test

      - name: List files in target/
        run: ls -lh target

      - name: Rename and upload JAR as artifact
        run: |
          mkdir staging
          cp target/*.jar staging/app.jar
        shell: bash

      - name: List files in staging/
        run: ls -lh staging

      - uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: staging/app.jar

  release:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: app.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar

      # - name: Move JAR to root
      #   run: mv app.jar ./app.jar

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/nguyenquy0710/mockapi:${{ env.VERSION }} \
                       -t ghcr.io/nguyenquy0710/mockapi:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/nguyenquy0710/mockapi:${{ env.VERSION }}
          if [ "${{ github.event_name }}" = "release" ]; then
            docker push ghcr.io/nguyenquy0710/mockapi:latest
          fi
